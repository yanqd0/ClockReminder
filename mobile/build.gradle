/*
 * ClockReminder: To remind you in every clock on Android Wear.
 * Copyright (C) 2016 Yan QiDong
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        applicationId "io.github.yanqd0.clockreminder"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode Ver.generateVersionCode()
        versionName Ver.generateVersionName("0.1", 21)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':common')
    wearApp project(':wear')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
}

class Ver {
    private static int commits = 0

    private static def getCommitCount() {
        if (commits == 0) {
            Process process = "git rev-list --count HEAD".execute()
            process.waitFor()
            commits = process.getText().toInteger()
        }
        return commits
    }

    public static def int generateVersionCode() {
        return getCommitCount()
    }

    public static def String generateVersionName(String version = "1.0", int offset = 0) {
        int count = getCommitCount() - offset
        String sha1 = getGitDescription()
        String date = new Date().format("yyMMdd")
        return "$version.$count.$date.$sha1"
    }

    private static def String getGitDescription() {
        Process process = "git describe --always".execute()
        process.waitFor()
        return process.getText().trim()
    }
}
